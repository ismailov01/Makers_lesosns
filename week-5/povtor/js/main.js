// let products = ["Nike", "Puma", "Bigser"]
// let newArr = products.map(item => item)
// console.log(newArr);    


// let arr = ["Есть", "жизнь", "на", "Марсе"];
// let newArr = arr.map(item => item.length)
// console.log(newArr);

// let names = ['sam', 'luck', 'james']
// names = names.map(item => item[0].toUpperCase() + item.slice(1))
// console.log(names);

// let arr = [1, 3, 10, -11, -555, 10]
// let newArr = arr.filter(item => item < 0)
// console.log(newArr);

// let arr = ['str', 1, [3, 4], true, ['str'], 10]
// let newArr = arr.filter(item => Array.isArray(item))
// console.log(newArr);

// let num = 123456789
// let str = num.toString()  //// Переводим в строку 
// let revFunc = str => str.split('').reverse().join('')
// console.log(revFunc(str))
// let arr = str.split('') /// Делим по буквам и переводим в массив
// arr = arr.reverse() /// Переворачиваем массив 
// let newStr = +arr.join('')  //// Из массива переводим в строку и знак + делает из строки число
// console.log(newStr);  
// let newNum = +num.toString().split('').reverse().join('')
// console.log(newNum);

// Напишите функцию, которая будет принимать строку и проверять является ли 
// она палиндромом. Пробелы и регистр учитывать не нужно.
// > Палиндро́м, пе́ревертень — число, буквосочетание, слово или текст, одинаково 
// читающееся в обоих направлениях. Например, число 101; слова "кок", "топот", 
// "комок" и т.д.

// function palindrome(word) {
    // let palindrome = word.split('').reverse().join('')
    // palindrome === word ? console.log(true) : console.log(false);
// }
// palindrome('топот')

// метод trim() убирает все пробелы до первого символа и после последнего символа


// let arr = [2, 5, 9, 6]
// function func6(arr, num) {
//   for(let i = 0; i < arr.length; i++){
//     if(arr[i] === num) {
//       splice(num, 1)
//   }
// }
// console.log(func6([2, 5, 9, 6], 5)) 


// Методы массивов. Задачи на закрепление.

// Задание № 1
// Написать функцию, которая получает в
// качестве параметра массив, затем перебирает
// все его элементы и выводит на экран сам
// элемент, а также тип данных элемента - числовой, не числовой
// Пример: [‘Молоко’, 77, 11, ‘Мед’, -88];
// Ответ: 	Молоко-не число
// 77-число и т.д.

// let arr = ['Молоко', 77, 11, 'Мед', -88]
// let 

// Задание № 2
// Напишите функцию, определяющую,
// присутствует ли заданный элемент в массиве.
// В качестве результата работы функции можно
// выдавать логическое значение true и индекс
// этого элемента, если элемент найден,
// и false — в противном случае.
// Пример: [‘Молоко’, 20, 40, “дом”, 30]
// Ввод: 40
// Вывод: true 2



// Задание № 3
// Найдите сумму чисел в массиве
// методом forEach(), методом reduce() и map().
// Пример: [5, 6, 7, 8, 9]
// Ответ: 35

// let arr = [5, 6, 7, 8, 9]
// let newArr = arr.reduce((prev, curr) => prev + curr)
// console.log(newArr)

// Задание № 4
// Оставьте в массиве только те строки,
// длина которых равна или больше 5-ти символов.
// Используйте filter().
// Пример: [‘aaa’, ‘aaaqqq', ‘zzzqq’, ‘zz’, ‘qsaa’, ‘q’, ‘az’]
// Ответ:  [‘aaaqqq', ‘zzzqq’]

// let arr = ['aaa', 'aaaqqq', 'zzzqq', 'zz', 'qsaa', 'q', 'az']
// let newArr = arr.filter(item => item.length >= 5)
// console.log(newArr)

// Задание № 5
// Дан массив, в нем могут быть обычные
// элементы и подмассивы.
// Оставьте в нем только подмассивы.
// Используйте filter().
// Пример: [1, 2, [3, 4], 5,[6, 7]]
// Ответ:  [[3, 4],[6, 7]]

// let arr = [1, 2, [3, 4], 5,[6, 7]]
// let newArr = arr.filter(item => Array.isArray(item))
// console.log(newArr)

// Задание № 6
// Напишите функцию которая принимает в аргументы массив и элемент массива, и удаляет переданный элемент
// из массива.
// Например: remove_array_element([2, 5, 9, 6], 5);
// Вывод: [2, 9, 6]

// let arr = [2, 5, 9, 6]
// function func6(arr, num) {
//   for(let i = 0; i < arr.length; i++){
//     if(arr[i] === num) {
//       splice(num[i], 1)
//   }
//   console.log(arr)
// }
// func6(arr, 5)

// Задание № 7
// Дан массив с числами. Найдите сумму
// первых N элементов до первого нуля.
// Например здесь суммируем первые 3 элемента, так как
// дальше стоит элемент с числом 0.
// Пример: [1, 2, 3, 0, 4, 5, 6]
// Ответ: 6
// Используйте slice() и reduce().

// Задание № 8
// Дан массив с числами. Напишите функцию, которая
// вычисляет сколько элементов с начала массива
// надо сложить, чтобы в сумме получилось 10?
// Пример:  [3, 1, 4, 2, 4, 5, 6]
// Ответ: 4

// Задание № 9
// Напишите функцию, которая принимает массив и состоящий из строк
// и возвращает новый массив состояший только из первых и последних
// букв каждой строки
// Например: ['hi', 'goodbye', 'smile']
// Вывод: ['hi', 'ge', 'se']

// Задание № 10
// Дан массив с числами. Вывести количество
// отрицательных чисел в этом массиве.
// Пример: [7, -1, -9, 0, 4, 5, -6]
// Ответ: 3

// Задание №11
// Напишите функцию shuffle(array), которая перемешивает
// (переупорядочивает случайным образом) элементы массива.
// Каждый вызов данной функции должен возвращать массив с
// разным порядком элементов массива.
// Пример: дан массив [4, 8, 12, 16]
// Вывод: [8, 16, 4, 12], следующий запуск выдаст также
// другой порядок элементов - [12, 4, 16, 8]

// Задание №12
// Напишите функцию которая возвращает массив,
// содержащий только уникальные элементы.
// Пример: ['apple', 'orange', 'apple', 'pear']
// Вывод: ['apple', 'orange', 'pear']

// Задание №13
// Напишите функцию которая принимает строку и возвращает объект с ключами в виде
// гласных, и значениями ключей в виде чисел, обозначающих сколько раз данная
// гласная встречается в заданной строке. Функция не должна учитывать регистр, т.е
// должна учитывать и заглавные и строчные буквы.
// Использовать forEach
// Например: 'I Am awesome and so are you'
// Вывод: {i: 1, a: 4, e: 3, o: 3, u: 1};

// Задание №14
// Напишите функцию которая принимает в качестве аргумента массив состоящий из объектов
// (с элементами в виде ключей и значений), а также две новые строки.
// И добавляет новую пару ключ и значение, состоящих из указанных строк,
// к каждому из объектов массива
// Например: myFunc([{name: 'Elie'}, {name: 'Tim'}, {name: 'Matt'}, {name: 'Colt'}], 'title', 'instructor')
// Вывод:[{name: 'Elie', title:'instructor'},
// {name: 'Tim', title:'instructor'},
// {name: 'Matt', title:'instructor'},
// {name: 'Colt', title:'instructor'}]

// Задание №15
// Вам даны два массива состоящих из чисел, длина массивов >= 1,
// напишите функцию которая возвращает true если сумма квадратов
// каждого элемента в первом массиве больше чем сумма кубов каждого
// элемента второго массива.
// Использовать метод reduce()

// Например: [4, 5, 6], [1, 2, 3]
// Вывод: true, т.к (4 ** 2 + 5 ** 2 + 6 ** 2) > (1 ** 3 + 2 ** 3 + 3 ** 3)





































































































